<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeTable.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAABuwAAAbsAR51ODUAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAASHklEQVR4XuWa2U9V5/rHT84vaZr8kl60SZP2H+jFiT3t0YIgMzILMoiCKKgIbtgMMs+wGTawmVEU
        BMQBZ2trp3PRpDeemt5YTZp6TjRpL5rGpEOamPTKm+d8v8/aiz3wImwPd67kk+V691ov6/t9n/d5n3e7
        /yIiLzXGxpcJY+PLhLHxZcLYuJnk5+f/37vbtr2zZWtY9rvbwtr//kH4Mvj2vbDw394L2/7z++HbH78f
        HvHgH9sj7r6/PfLLrRGRU9siI/PejYx809TfZmNs3Ay2bI3Y8vdtYRMQ/SsEy3skbLu8T8Ij5B9ke6Rs
        JRGRsi1ih2yL3CEfREbJBzuiJGxHtIRFRT/aHhWzGBEVl2r6G5uBsfFF+VtExOtbtoU7IfaeioZYFQ2x
        Knp7xIrgrWbBEh4VI+HRMbKdxMRKBImNk8jYuO8jYxMO/y0//xXT335RjI2hguOv71F42PanlmDvKEMw
        RzkMAvMK9ktTW7sMDA3L5ImTMn/2rFy5dl1ZWFqS6ZMzMjgyIq2dnVJwsFii4hMkMi5edpD4eL2OSkiQ
        6MTEJ9HxiW3Jycn/b3qXUDE2hsKWiIgtEPyNv2COcmRcgjic1TI2OSUffvSRfPL55/LpCl/4+OIL+SyA
        f8rn4KPbn8gUTKmpb5CdaWkSk7hTid1JkiQ2KelRfHLyVtM7hYKxcSPExcW9CtFDEPzMfx7HJadIU2u7
        juytj2/Lrdu3IcbmEx+ffCIfK59afPqp3F7FZ3L7s8/kxoe3pMvlkozsHIFokCIJKST1WWJKSrPL5fqr
        6R03grFxPcLDw1+D4Dv+83gHQrSts1suX7sm12/eBB9afOjjhnLL4tYtubnCR3ITUcJIsfhYPvzYxy0v
        fKbX7Za0rCyNCpKUnk6+SsrKetv0ruthbHweYWFhb0DwPSYuTV5IXLkFBTK3sCCXrl6Vy1evWcCIK4o1
        z5XrFlev37C4YXHtxk0LGEcsA21s43wGnrtwQUqOHpXkjAwlZdcuSd2164eU3Ny3TO/8PIyNa7E1Ovot
        ZOuHdrZmkmpobpVzFy/K+eVl5YJyyeLSJbmoXFaWL/tzRZavWFxSrqqBloleI2Ggz0iwYqB17u7txbTI
        1ogg6buzHubk5Lxheve1MDaa2LFjx9tYnn6wl6fohETpcw/K4rlz4LwsLp2T5tZWyduzRyqcTpk5PStL
        GCmbcxcuqlFqlmIZ5jMNwCyfaQBGKfh3b3+/lB87Jv2YAjTQMu2KjE1NSVZurhqxK4fk3EsrSnvNpMGE
        sTEYLnNYj7/yrsfIwMkqfm5hUZlF+FN0ChKTTW5eHpY2LndLCpc6skjUtHNydoXzcvb8eVlawTYNZ1xX
        VVdLamrqCpX4WzTSNm4cJuTszVcjsvJyZXde3p24Q4deNWkJxtgYTGRsfLOuxyABGZjiT83OKTOzs3LM
        4ZBktGdmZsndu3elprZWkmFCDl5oYnpaZucXNEf4WJQzixbzNqgLyIINjOK1s6pKUiA6a/duuY58wTOv
        Kyor1bylC+fVKP6d/MJCyc7fIzlkX/6QSUswxkZ/ouLjt6IIeRaFkGfYN7d3yPTMjJwALF7KEJZJWJp2
        ZWbKgwcP8IjIn3/+KTU1NTAlWbJzcmR0YkJOzcEwcNrmzBlldn4+gLkFsqD/dkAkoykL89vum2des91R
        UQGTFhFVZxFRSyiyhiR3317JU/Y9yy/K34JHjLpsjI02rLZQeT3SIgQFyKGjZRpu41PTOvdKy8pkZ1KS
        ZCAL2y9oHzShGqFLc3Zjfg6PjlrGnTqlnCSnT68wQxBNhNdWVCUjqnzG2gevM2ECo4z3zc2fkTMw7szi
        gtQ1NiASCpS9+wu+Wa9GMDbaxCYmt7HqisOcz8rNg4gxGRkfF8/YmBwuLZWdMCUjY7V4+6AJnL80aTdC
        d8jjQRl8QpkiyBHME9MzBBGlUXUSUVW+KqqCDzUBn9Okcphwam5WI4rn0mNlsq9ovxQcAAeLnLjdqI8Y
        Gwm2sa+g6npiV11tXV0yCAGDnhFNeIkQn441+P4aL2gfagLmMc3i/GWYjk1OyjiZIoio6Smdw/z3UURV
        EgzbZYiq4IOf0ySaVVtXh8g5pZHkGRuVwoMHpLD4gOwvPvg0v7T0ddxu1GlsJBB9OBHJJjE1DR0VS//g
        oPTj5QnDLyExUb7++mvcuv5hm0DT+Gyve0A841Y0jZKJcfx7TI4wqpIQVRsQbx9MujSM08wXTSelpq5W
        ikqK5cChYjlYUrJmFBgbSVJa2vcsM1lpNbe3Sw/WYVf/gLgGBqQA2TYBOzMnIoHiNnKsmADjOGrdfb0y
        hN2fgsg6dOTwhqPKPvyn2JHSI4iiKZlUptGvR4oPH5LiI8o93G7UaWxMTE9PtctMjj43IqSboPpqgSF8
        0XiYwDU5FBO4rDF6OMrdPT2YEoNSfKhEjUmH4fcf3Pfe/fzDNtSaWlnox42pNQ4mFE6v2oY6JO4jFuWH
        jCvCqgYC4YupGCVSU1+v87/dprtLOrq7pbG1RdLwwvEJ8aGbgPsTEhNgQobsP1CkhrCv+/dDE5+4MxFT
        KhOR2ScerDKc+yNkfBRTa1R6B/rkSFmpHCk/KqXlZRN4dJXWVQ0EdfUj1NWSiUKmub1Np0BLB+mQ1k7S
        CVM6sQ9o0hePi4/XwiQUE2gapxFJw64uZPE6lRBFvT1IzMOYRgBhP0xGPTCE5xE5VumQo44yKXOU/8rv
        J9FFgNaAC5Kck/Om1tVgf0mJNLa0+MCoN6Heb2prleY2GtOGdbdRUtJSYULcC5hQKal4NhTxzipf9HQi
        EvsH3TqNiHt4UAaJhwwp9U0NUl55TI2oqKh4B90E6A24IJnZ2XmZuTlaV5dVOFRgXVMjOmqSeow4R72h
        pRmGABhCajFNWJ7GxsEEVGehmPDw4UPv1fMPFe+NmvSMdEzHDg3xXnc/SnMygI0SoCFqilvcoKO7QxzO
        CqmoUrLRVYDegAuSnZc3tXtPnmSDYmTmmrrjUtNQj4RCGuQ4QbXFiovU05zmRqk+zvo/WU1gibpREzZy
        sC9GC/MNp1xLeytWEZf0eHFhRXH192LHCENgSh9x89yPiG2WymqnVNY4xVnrbEd3AXoDLgg2El/m5Ofr
        7ip3715UU0VwzinVMILUoOAgtfUWx2EMoRnOGqv0jY2NhQmOTTFBxWNqxSPPpKWnqaCuni6sSqRbunq7
        NQ909/XADNAPQwA/O95wHKKrpIocr8Z71yyjywC9ARckd1/+Xd1MFOyTPURr6kJk0jIVWFVbY3Gc1MIU
        AmPqSZ26nZScJDE0ASXq/2ICn62orND8wlzRgPnc3tmO8CcdGt4d3Z3S2UN8prS0tSAia0C1AuFKbX3t
        t+g2QG/ABdlTuO+Bbib2W8L3FhVqXb0PdfVBFBZHK45BZBVCqkoNcdYS2xD+0Vo5hjnH4iQmNuaFTeAz
        nEpxmFIpqSlShyhr6WiV1o42aeskfkZ4acXUqGtkhK4IVhgJBJ/9hq4D9AZckH37Cx+rYN1MFClaV4P9
        Vm0NI0o0IijUgelRwTkWZEo5jGJZGxMTugmWeAfySazu+Gogoqm1CatPM1Yf0N6CPABgCM8NLY0rYi3B
        lui6RhWNPEXqcV/9z+g+QG/ABYHgnwsPWqJtwUUlxKqrD6BqowGMhhKUmYdRaFAsM62jqlKhITxnopaI
        hgHMCxvN9jzUAJhmGZCMKVaDVacRKw5M8BrB6zoIM4yy1Kvoekt0c4M0kpYGaWppfIzuA/QGXBAI/s0s
        uMSuq6Wk9LBil5k0gZQeO4qio1zX3QwUKdEx0Tp3v/vuO3Qd2rFiAnIJc4oTWdwWGSzYGmVbsFc0BNOk
        plbShMhpQm5o5iYjQG/ABYHgbw96RdubiRIshyoYGw4V7BXtKzMB9uBHAc9cqqKio/X87//8B92+2GGb
        wFxCEyqrK/0Ee8P6OYJVdHuz0trRQu6i2wC9ARekuLRk2SfYGuXnCfaWmSiayvWaS1U0xHM///gxI+5/
        O/wjQafD8SqD4MbVgpEbKLoNeaKtsxWrRxsSZtuX6DJAb8AFgeB2/7CmYBXN8A4SzLlvl5m8Zrgz7Hdn
        75Yff/wR3W3O4Z8UU2BCbX2NNPvCOkgwUMGgqw2rA+huR9ncjvqhYxLdBegNuCCl5aXZq0cZglU0BAMK
        VpwOTX7lEM+liuJz83Llp59+QlfrHxRGNnLwvgqY4FsWj68ruLOng6JRG3RgK9+JgqkjD10F6A24IEcq
        jrzjExw4yrZgh9bVzPaV2m6L34vK8cmTJ+hm/cMObRKSCf6FEaaCirYFW6OsWII7pae3CxViF8rlbnG5
        XKt+dRJwQbhlLK90/LqWYCYirasBjeG85FpfWFgov/zyC7pY/1Dx3pAmoZTNvK8SJsTDhLT0VJ3/1ihD
        sIqGYD/Rvf2kB/uCnkd4fJXeVQ3EUeWYsHZPgYJX6moUOg6YY5W8MXIQtcLvv/+OR9c//MUzcgjDOtRd
        pL05SkfSbUUOWBllr+DeAYp2YVPkwi4RDPYu4tFVWlc1kKqqqi0qGJWdJbgqoK6uQFTY4g9jxfjjjz/w
        2PoHXzx4HrNoSU2DCfp9QmgmOGFCAk3Q7XErR9lfsAwofdgW98nQUL/xd0arGmyq6qrvBW0kvAVIrSa6
        WIgvKyuTp0+f4vb1D0u8PX9TsLGpt5IX5jDnchrmNMOa4R2aCdYXJIXYu/gLdg/1y+CwxZBn4HvcbtRp
        bCQ19TVOFe2tq+2qiyOm+36sy3fu3MGt6x8qPih5BWfrZsxl1hDWd4wb/2aJX80nwoDMrF3+gpXhEbfi
        8Qwexq1GncZGUldX9zoEPzWVmQewR7DW5BT59j53mGsftviVpIUCZvXyZGXr1o5mDWeGNcN7PRP4VRpz
        AA2oQEK2BQfgcT9B9l/zl2XGRpv6lnrn6qrLKkD2Fuy15jJMWOs7PQrwZew0PNdoXp78ElcH5nLGLpgA
        Ufz+by0TVsTvTJRDh4sDRtwfj8fdhtuN+oix0Yb/sQjB36wqM1F8kILCAg1rJrRgEyzxQZkaolVw4PKk
        2VoTl9tKXF3dHSilM3Rkqwwm8P8OGCnricfoPxodHX3uz+mMjf60dLVsQZn5LLCu9lVdhUWFOsL84YJt
        goq3l6mMNK3W7FG2BVvZ2s7Uvd7E1bcyj2nWrkyYAJH8Gtw2YcPiR9zPhsaG1v0ZnbExGAgdWrPMBEUH
        9qtYJrh/ff0vw/LkW48HvCKH7BcdHRQPGBkb0jOxRTBSMrGttk1gwtugeDDYbNISjLExGEyFVztd7Xds
        wcHzuKe3Ww4cLFLRNhl40c7uNl2O+EIjY8MyNuGRickxmZoel6kTE3JiZlI5eWoK5ymZPjmp7ZPTY7hv
        VO9nxNgm2GxA/Ffr/S7AxthoAh2+hjLznn/y8p/HPJc7jurLck3udnXpqFLEJASfgLiZ0yfk9NyMzM2f
        lvmFWZlfnPOBa7bPnpmRU7MnYcq0GkIzODVKDhVr347K8nXEu3/weDwb/s2gsXEtBgfb3ujt63kYWGau
        nscM47FxCh/TEaaguflTKvTs0rycO78o5y8uycXlc3Lx0nk985rt/Jz38X7LiClExbiMIyJGx4dNgv15
        6J50h/RbQWPj83C73W9B7A8q2ivYV3VZI2ONulc8Rn32jFf8uQUVugzRl68uy7UbV+TGzWt65jXb+Tnv
        4/18js+zH/bHfoME+3NvcHAwpN8IEmPjeng8rrch+CtNZghH/5Dk6I9i9CemRhHCEwj7aZlF2J9BiC96
        R/8CRnz58gW5fGVZhfPMa7bzc97H+/kcn2c/7G8UecRP8ApIqHdcJ1wb/m2gP8bGjcAkw0yLF3gW/EI6
        BZjwpsb05TmfT3MaMBIgbOHsGQ31JYy0Da/ZrrkA9/F+Kw94xZvDH397YIhJ2vSOG8HYGApca1lwGF4u
        wAjOYyvjT2tYc36fniMzeuY12/k57+P9FM5EauobfDM83Lfuz+DWw9gYKqy2WHKy7ja8qEIzKIYjSVPG
        J0cCGJsgnpV6wNSHl6fAudFlbj2MjS8KXuoV7rwwNb4PeunN4B5wTky41vzF14tgbNwMhkaGUoc9A4tr
        TY8N8iuY2IxQXwtj42YzOup6c2hkIG/YMzgJQV8Oj7rv4vwAPAY/g9/At2AZ0dOOKMr2ePrfuXHjxqqf
        tGw2xsaXCWPjy4Sx8WXC2PjyIH/5L07rgjxQ5g+wAAAAAElFTkSuQmCC
</value>
  </data>
</root>